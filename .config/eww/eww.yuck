(defpoll battery :interval "10s"
  "cat /sys/class/power_supply/*/capacity | head -n1")

(defpoll batt_name :interval "10s"
  "cat /sys/class/power_supply/*/model_name | head -n1")

;;;;;;;;;;;;;
;; sidebar ;;
;;;;;;;;;;;;;

(deflisten works 
    :initial ""
	`python3 scripts/workspaces.py`)

(defpoll updates
    :initial ""
    :interval "600s"
    "~/.config/sway/helpers/updates.sh")

(defpoll volume
    :initial "0"
    :interval "5s"
    "pamixer --get-volume")

(defpoll brightness
    :initial "0"
    :interval "5s"
    "scripts/brightness")

(defpoll side-time
    :initial "0"
    :interval "10s"
    "date '+%H:%M'")

(defpoll side-date
    :initial "0"
    :interval "10s"
    "date '+%b %d'")

(defpoll weekday
  :initial ""
  :interval "60s"
  "date '+%a'")

(defpoll vpn_status
    :initial ""
    :interval "10s"
    "scripts/vpn_status")

(defwidget placeholder []
    (box :orientation "v")
)

(defwidget separator [] 
    (box :orientation "h"
        (label :class "separator" :text "———")
    )
)

(defwidget side-workspaces []
    (box
        :orientation "h"
        ;; :halign "fill"
        ;; :hexpand "true"

        (box
            :class "workspaces"
            :orientation "v"
            ;; :halign "fill"
            ;; :hexpand "true"
            :spacing 5
			(literal :content "${works}"))))

(defwidget clock []
    (box :orientation "v" :class "clock"
        (label :text "${weekday}")
        (label :class "small" :text "${side-date}")
        (label :class "small" :text "${side-time}")
    )
)

(defwidget circle-indicator [value text cmd ?class]
    (box
        :orientation "h"
        :class "indicator ${class ?: ''}"
        :valign "center"
        :halign "center"
        :visible {text != ""}
        (circular-progress
            :class "${class ?: ''}"
            :value {value == '' ? 0 : value}
            :start-at 25
            :thickness 2
            (button
                :onclick cmd
                :class "${class ?: ''}"
                (label
                    :class "icon ${class ?: ''}"
                    :text text
                )
            )
        )
    )
)

(defwidget updates [] (circle-indicator
    :value {(updates == 0 || updates == "") ? "" : updates }
    :text {(updates == 0 || updates == "") ? "" : "" }
    :cmd "hyprctl dispatch exec `foot --title 'System - Update Manager' bash ~/.config/sway/helpers/run_updates.sh`"
    :class "urgent"
    )
)

(defwidget cpu [] (circle-indicator
    :value {EWW_CPU.avg}
    :text ""
    :cmd ""
    )
)

(defwidget vpn [] (circle-indicator
    :value 0 
    :text "${vpn_status == "" ? '' : ''}"
    :cmd "hyprctl dispatch exec `foot --title 'VPN Connect' -e bash ~/.config/sway/helpers/vpn_connect.sh`"
    )
)

(defwidget ram [] (circle-indicator
    :value {EWW_RAM.used_mem_perc}
    :text ""
    :cmd ""
    )
)

(defwidget volume [] (circle-indicator
    :value volume 
    :text ""
    :cmd "hyprctl dispatch exec pavucontrol"
    )
)

(defwidget brightness[] (circle-indicator
    :value brightness
    :text ""
    :cmd ""
    )
)

(defwidget sidebar-top []
    (box
        :class "top"
        :orientation "v"
        :space-evenly "false" 
        :valign "start"
        :halign "fill"
        :hexpand "true"
(side-workspaces)))

;; CENTER WIDGETS
(defwidget sidebar-center []
    (box :orientation "v" :space-evenly "false" :valign "center" :halign "center"
(placeholder)))

;; BOTTOM WIDGETS
(defwidget sidebar-bottom []
    (box 
        :orientation "v" 
        :space-evenly "false"
        :class "bottom"
        :valign "end"
        :halign "fill"
        :spacing 5
(updates)
(vpn)
(ram)
(cpu)
(volume)
(brightness)
(separator)
(clock)
))

(defwidget sidebar []
    (box
        :class "sidebar"
        :orientation "v"
        :halign "fill"
(sidebar-top)
(sidebar-center)
(sidebar-bottom)))

(defwindow sidebar
    :geometry (geometry
                :x "10px"
                :y "0.5%" 
                :height "98%" 
                :width "3%"
                :anchor "left center"
                )
    :monitor 0
    :wmignore "true"
    :windowtype "dock"
    :exclusive true
(sidebar))

